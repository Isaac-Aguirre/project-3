{"version":3,"sources":["components/Navbar/Navbar.js","components/HomePage/HomePage.js","components/Signup/LoginRegister.js","components/LandingPage/LandingPage.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","tabindex","aria-disabled","placeholder","HomePage","Component","LoginRegister","LandingPage","loggedContext","Consumer","context","console","log","isLogged","class","for","aria-describedby","React","createContext","App","Fragment","Navbar","Login","exact","path","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6LAEe,aACb,OAEE,yBAAKA,UAAU,iDACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,UACA,4BAAQD,UAAU,iBACVE,KAAK,SAASC,cAAY,WAC1BC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,qBACvC,0BAAMP,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BQ,GAAG,0BAC3C,wBAAIR,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,QAAsC,0BAAMD,UAAU,WAAhB,eAExC,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,SAEF,wBAAID,UAAU,qBACZ,uBAAGA,UAAU,2BAA2BC,KAAK,IAAIO,GAAG,iBAAiBC,KAAK,SAASN,cAAY,WAAWO,gBAAc,OAAOJ,gBAAc,SAA7I,YAGA,yBAAKN,UAAU,gBAAgBW,kBAAgB,kBAC7C,uBAAGX,UAAU,gBAAgBC,KAAK,KAAlC,UACA,uBAAGD,UAAU,gBAAgBC,KAAK,KAAlC,kBACA,yBAAKD,UAAU,qBACf,uBAAGA,UAAU,gBAAgBC,KAAK,KAAlC,yBAGJ,wBAAID,UAAU,YACZ,uBAAGA,UAAU,oBAAoBC,KAAK,IAAIW,SAAS,KAAKC,gBAAc,QAAtE,cAGJ,0BAAMb,UAAU,4BACd,2BAAOA,UAAU,uBAAuBE,KAAK,SAASY,YAAY,SAASP,aAAW,WACtF,4BAAQP,UAAU,uCAAuCE,KAAK,UAA9D,c,6BCrCWa,E,uKAEb,OAII,6BACI,8C,GAPsBC,aCAjBC,E,uKAEb,OACI,6BACI,mD,GAJ2BD,aCItBE,E,uKAEb,OACI,kBAACC,EAAcC,SAAf,MACK,SAACC,GAEE,OADAC,QAAQC,IAAIF,IACY,IAArBA,EAAQG,SACA,kBAAC,EAAD,MAEJ,kBAAC,EAAD,a,GATcR,aCH1B,aAEX,OAEI,6BACI,8BAEI,yBAAKS,MAAM,cACP,2BAAOC,IAAI,sBAAX,iBACA,2BAAOxB,KAAK,QAAQuB,MAAM,eAAejB,GAAG,qBAAqBmB,mBAAiB,cAClF,2BAAOnB,GAAG,YAAYiB,MAAM,wBAA5B,mDAEJ,yBAAKA,MAAM,cACP,2BAAOC,IAAI,yBAAX,YACA,2BAAOxB,KAAK,WAAWuB,MAAM,eAAejB,GAAG,2BAEnD,yBAAKiB,MAAM,yBACP,2BAAOvB,KAAK,WAAWuB,MAAM,mBAAmBjB,GAAG,kBACnD,2BAAOiB,MAAM,mBAAmBC,IAAI,iBAApC,iBAEJ,4BAAQxB,KAAK,SAASuB,MAAM,mBAA5B,a,eCVHN,EAAgBS,IAAMC,gBAmBpBC,MAjBf,WACI,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAD,MAEA,kBAACC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAChB,EAAciB,SAAf,CAAwBC,MAAO,CAAEb,UAAU,IACvC,kBAAC,EAAD,WCZJc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.1f369cf5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function(){\n  return(\n    // Navbar Name\n    <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">Hollar</a>\n      <button className=\"navbar-toggler\"\n              type=\"button\" data-toggle=\"collapse\"\n              data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">Link</a>\n          </li>\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Dropdown\n            </a>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <a className=\"dropdown-item\" href=\"#\">Action</a>\n              <a className=\"dropdown-item\" href=\"#\">Another action</a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n          </li>\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nexport default class HomePage extends Component {\n    render() {\n        return (\n            // sidebar and navbar are going to be garentted on the screen\n            // this div is going to be the space in the middle\n            \n            <div>\n                <h1>Home Page</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class LoginRegister extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Login Register</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport HomePage from '../HomePage/HomePage';\nimport LoginRegister from '../Signup/LoginRegister'\nimport {loggedContext} from '../../App'\n\n\nexport default class LandingPage extends Component {\n    render() {\n        return(\n            <loggedContext.Consumer>\n                {(context) => {\n                    console.log(context)\n                    if(context.isLogged === true){\n                       return  <HomePage />\n                    }\n                    return <LoginRegister />\n                }}\n            </loggedContext.Consumer>\n        )\n    }\n}\n","import React from 'react';\n\n\nexport default function () {\n\n    return (\n\n        <div>\n            <form>\n\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" />\n                </div>\n                <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n                    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\n\n            </form>\n        </div>\n\n\n\n\n    )\n}","import React, { Component } from 'react';\n//import './App.css';\nimport Navbar from './components/Navbar/Navbar';\n//import Sidebar from './components/Sidebar/Sidebar';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Login from './components/Login/Login';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nexport const loggedContext = React.createContext();\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Navbar />\n            \n            <Login />\n            <Router>\n                <Route exact path=\"/\">\n                    <loggedContext.Provider value={{ isLogged: false }}>\n                        <LandingPage />\n                    </loggedContext.Provider>\n                </Route>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}